generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tool {
  id          Int            @id @default(autoincrement())
  name        String
  logo        String?
  description String?
  bookmark    Bookmark[]
  users       ToolsOnUsers[]


  @@index([logo])
  @@index([name])
}

model User {

  id           Int            @id @default(autoincrement())
  email        String
  password     String
  firstname    String?
  lastname     String?
  username     String
  avatar       String?
  bookmark     Bookmark[]
  tools        ToolsOnUsers[]
  RefreshToken RefreshToken[]


  @@index([email])
  @@index([firstname])
  @@index([lastname])
}

model Bookmark {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  link        String?
  linkImg     String?
  userId      Int?
  toolId      Int?
  tool        Tool?   @relation(fields: [toolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bookmark_toolId_fkey")
  user        User?   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bookmark_userId_fkey")

  @@index([link])
  @@index([linkImg])
  @@index([name])
}

model ToolsOnUsers {

  user       User      @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId     Int
  tool       Tool      @relation(fields: [toolId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  toolId     Int
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)

  @@id([userId, toolId])
}

model RefreshToken {
  id         Int    @id @default(autoincrement())
  token      String
  expiration String
  userId     Int
  user       User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

