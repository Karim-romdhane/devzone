generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tool {
  id          Int            @id @default(autoincrement())
  name        String
  logo        String?
  description String?
  bookmark    Bookmark[]
  users       ToolsOnUsers[]

  @@index([logo])
  @@index([name])
}

model User {
  id        Int            @id @default(autoincrement())
  email     String
  password  String
  firstname String?
  lastname  String?
  username  String
  website   String?
  active    Boolean        @default(false)
  imgId     Int?
  bookmark  Bookmark[]
  Token     Token[]
  tools     ToolsOnUsers[]
  Image     Image?

  @@index([email])
  @@index([firstname])
  @@index([lastname])
  @@index([website])
}

model Bookmark {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  link        String?
  userId      Int?
  toolId      Int?
  imgId       Int?
  tool        Tool?   @relation(fields: [toolId], references: [id], onDelete: Cascade, map: "bookmark_toolId_fkey")
  user        User?   @relation(fields: [userId], references: [id], onDelete: Cascade, map: "bookmark_userId_fkey")
  Image       Image?

  @@index([link])
  @@index([imgId])
  @@index([name])
}

model ToolsOnUsers {
  userId     Int
  toolId     Int
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  tool       Tool      @relation(fields: [toolId], references: [id], onDelete: Cascade)
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, toolId])
}

model Token {
  id              Int     @id @default(autoincrement())
  jwtRefreshToken String?
  expiration      String?
  emailToken      String
  userId          Int
  user            User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([emailToken])
  @@index([jwtRefreshToken])
  @@index([expiration])
}

model Image {
  id         Int       @id @default(autoincrement())
  type       String?
  fileName   String    @unique
  filePath   String
  mimeType   String?
  size       BigInt?
  bookmarkId Int?      @unique
  Bookmark   Bookmark? @relation(fields: [bookmarkId], references: [id], onDelete: Cascade)
  userId     Int?      @unique
  user       User?     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([fileName])
  @@index([filePath])
  @@index([mimeType])
  @@index([size])
}
